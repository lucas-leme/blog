---
title: "Introdução a Macroeconomia"
author: "Lucas Leme Santos"
date: "2023-10-20"
categories: [macro, pib]
toc: true
toc_sticky: true
toc_label: "Sumário"
execute:
  echo: false

draft: true
---

A Macroeconomia é uma ciência que visa estudar o comportamento da economia como um todo. Para isso, ela busca explicar o comportamento de variáveis agregadas, tanto no curto quanto no longo prazo. Uma variável agregada é aquela que representa o comportamento de um conjunto de variáveis. Por exemplo, o PIB é uma variável agregada que representa o valor total de todos os bens e serviços produzidos em uma economia.

Nesta introdução, vamos nos concentrar na composição do PIB, com ênfase no Brasil. Ao entender os componentes do PIB, podemos obter insights sobre a saúde e o desempenho geral da economia.

## Como estimar o PIB?

Existem duas principais formas de estimar o PIB: Produção Agregada e Renda.

### Produção Agregada

Através da produção agregada, é possível estimar o PIB com base em quatro componentes: Consumo, Investimento, Gastos do Governo e Exportações Líquidas. A ideia por trás dessa abordagem é que o PIB é a soma de todos os bens e serviços produzidos em uma economia. E para produzir esses bens e serviços, é necessário consumir, investir, gastar e exportar. Na equação @eq-producao_agregada, temos a representação matemática dessa abordagem.

$$
    PIB = C + I + G + (X - M)
$$ {#eq-producao_agregada}


```{python, eval=FALSE}

import plotly.express as px
import plotly.graph_objects as go
import pandas as pd
import requests
# hide all warnings
import warnings

warnings.filterwarnings('ignore')

```

```{python, eval=FALSE}


endpoint = "https://servicodados.ibge.gov.br/api/v3/agregados/1620/periodosvariaveis/583?localidades=N1[all]&classificacao=11255[90687,90691,90696,90707,93404,93405,93406,93407,93408]"


r = requests.get(endpoint)

data = r.json()

flat_data = []
for entry in data:
    for result in entry["resultados"]:
        for serie_i in result["series"]:
            for i, date_and_value in enumerate(serie_i["serie"].items()):
                date, value = date_and_value
                format_date = date[:4] + "-" + date[4:] + "-01"

                assert len(result['classificacoes']) == 1

                flat_data.append({
                    "id": result['classificacoes'][0]['id'],
                    "nome": list(result['classificacoes'][0]['categoria'].values())[0],
                    "date": format_date,
                    "value": value
                })


# Create a DataFrame
df = pd.DataFrame(flat_data)

datasets = {
    nome: df[df["nome"] == nome]
    for nome in df["nome"].unique()
}

nomes_mapper = {
    'Agropecuária - total': 'Agropecuária',
    'Indústria - total': 'Indústria',
    'Serviços - total': 'Serviços',
    'PIB a preços de mercado': 'PIB',
    'Despesa de consumo das famílias': 'Consumo',
    'Despesa de consumo da administração pública': 'Governo',
    'Formação bruta de capital fixo': 'Investimento',
    'Exportação de bens e serviços': 'Exportação',
    'Importação de bens e serviços (-)': 'Importação'
}

datasets = {
    nomes_mapper[nome]: dataset
    for nome, dataset in datasets.items()
}

for nome, dataset in datasets.items():
    # to numeric
    dataset["value"] = pd.to_numeric(dataset["value"])
    dataset.index = pd.to_datetime(dataset["date"])

    if nome == "Importação":
        dataset["value"] = dataset["value"] * -1


product_components = [
    "Consumo",
    "Investimento",
    "Governo",
    "Exportação",
    "Importação"
]

income_components = [
    "Agropecuária",
    "Indústria",
    "Serviços"
]

product_dataset = pd.DataFrame({
    nome: dataset['value']
    for nome, dataset in datasets.items()
    if nome in product_components
})

income_dataset = {
    nome: dataset['value']
    for nome, dataset in datasets.items()
    if nome in income_components
}

```

```{python, eval=FALSE}

```


```{python, eval=FALSE}

# plot area chart

fig = px.area(product_dataset, title="Componentes do PIB - Produção Agregada")

# add PIB
fig.add_trace(
    go.Scatter(
        x=datasets["PIB"]["date"],
        y=datasets["PIB"]["value"],
        name="PIB",
        mode="lines",
        line=dict(color="black", width=2)
    ),
    row=1,
    col=1
)


fig.show()
```
